/*! Image Uploader - v1.2.3 - 26/11/2019
 * Copyright (c) 2019 Christian Bayer; Licensed MIT */

(function ($) {

    $.fn.imageUploader = function (options) {

        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('.upload-demo').addClass('ready');
                    $('#cropImagePop').modal('show');
                    rawImg = e.target.result;
                }
                reader.readAsDataURL(input.files[0]);
            }
            else {
                swal("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        // Default settings
        let defaults = {
            preloaded: [],
            imagesInputId: 'id-input-image-object',
            imagesInputName: 'imagen',
            multipleImages: false,
            preloadedInputName: 'preloaded',
            label: 'Adicione ou Remova as imagens aqui, click para buscar as imagens',
            extensions: ['.JPG', '.jpg', '.JPEG', '.jpeg', '.PNG', '.png', '.SVG', '.svg'],
            mimes: ['image/jpeg', 'image/png', 'image/svg+xml'],
            maxSize: undefined,
            maxFiles: undefined,
        };

        // Get instance
        let plugin = this;

        // Will keep the files
       // let dataTransfer = new DataTransfer();

        // The file input
        let $input;

        // Set empty settings
        plugin.settings = {};

        // Plugin constructor
        plugin.init = function () {

            // Define settings
            plugin.settings = $.extend(plugin.settings, defaults, options);

            // Run through the elements
            plugin.each(function (i, wrapper) {

                // Create the container
                let $container = createContainer();

                // Append the container to the wrapper
                $(wrapper).append($container);

            });

        };

        let createContainer = function () {

            // Create the image uploader container
            let $divContainerDetails = $('<div>', {class: 'div-container-details-image-object'});

            let $divContainerContent = $('<div>', {class: 'div-container-content-image-object div-content-imagefield-image-object'}).appendTo($divContainerDetails);

            // Create the input type file and append it to the container

            if(plugin.settings.multipleImages){
                $input = $('<input>', {
                    type: 'file',
                    autocomplete: 'off',
                    class: 'input-image-object',
                    id: plugin.settings.imagesInputId,
                    name: plugin.settings.imagesInputName + '[]',
                    accept: plugin.settings.extensions.join(','),
                    multiple: ''
                }).appendTo($divContainerContent);
            } else {
                $input = $('<input>', {
                    type: 'file',
                    autocomplete: 'off',
                    class: 'input-image-object',
                    id: plugin.settings.imagesInputId,
                    name: plugin.settings.imagesInputName,
                    accept: plugin.settings.extensions.join(','),
                }).appendTo($divContainerContent);
            }

            let $divPlaceholder = $('<div>', {
                    class: 'div-placeholder-image-object-fixed div-placeholder-image-object-ishovered'
                }).appendTo($divContainerContent);

            $divChooseImage = $('<div>', {class: 'div-choose-image-object-add'}).appendTo($divPlaceholder);

            let $btnChoose = $('<button>', {
                type: 'button',
                class: 'btn-choose-image-object-a btn-choose-image-object-b',
                onclick: 'chargeImage()'
            }).appendTo($chooseImageAdd),

                $divChooseImageBtn = $('<div>', {class: 'div-choose-image-object-btn-content'}).appendTo($btnChoose),

                $divChooseImageIcon = $('<div>', {class: 'div-choose-image-object-btn-icon'}).appendTo($divChooseImageBtn);

            $imgAddImage = $('<img>', {
                src: 'https://portal.ifood.com.br/partner-portal-catalog-web-front/static/media/upload-red.0040b8ea.svg',
            }).appendTo($divChooseImageIcon);

            $divChooseImageBtn.append('Adicionar imagem');

            $btnChoose.on('click', function (e) {
                // Prevent browser default event and stop propagation
                prevent(e);

                // Trigger input click
                $input.trigger('click');
            });

            // Stop propagation on input click
            $input.on("click", function (e) {
                e.stopPropagation();
            });

            // Listen to input files changed
            $input.on('change', function () {
                imageId = $(this).data('id');
                tempFilename = $(this).val();
                $('#cancelCropBtn').data('id', imageId);
                readFile(this);
            });

            $('.input-image-object').on('change', function () {
                imageId = $(this).data('id');
                tempFilename = $(this).val();
                $('#cancelCropBtn').data('id', imageId);
                readFile(this);
            });

            return $container;
        };

        let prevent = function (e) {
            // Prevent browser default event and stop propagation
            e.preventDefault();
            e.stopPropagation();
        };

        let validateExtension = function (file) {

            if (plugin.settings.extensions.indexOf(file.name.replace(new RegExp('^.*\\.'), '.')) < 0) {
                alert(`O arquivo "${file.name}" não é uma imagem do tipo: "${plugin.settings.extensions.join('", "')}"`);

                return false;
            }

            return true;
        };

        let validateMIME = function (file) {

            if (plugin.settings.mimes.indexOf(file.type) < 0) {
                alert(`O arquivo "${file.name}" não é uma imagem do tipo: "${plugin.settings.mimes.join('", "')}"`);

                return false;
            }

            return true;
        };

        let validateMaxSize = function (file) {

            if (file.size > plugin.settings.maxSize) {
                alert(`Imagem: "${file.name}" não pode ser adicionada pois excedeu o tamanho de ${plugin.settings.maxSize / 1024 / 1024}Mb`);

                return false;
            }

            return true;

        };

        let setPreview = function ($container, files) {

            // Add the 'has-files' class
            $container.addClass('has-files');

            // Get the upload images container
            let $uploadedContainer = $container.find('.uploaded'),

                // Get the files input
                $input = $container.find('input[type="file"]');

            // Run through the files
            $(files).each(function (i, file) {

                // Add it to data transfer
                dataTransfer.items.add(file);

                // Set preview
                $uploadedContainer.append(createImg(URL.createObjectURL(file), dataTransfer.items.length - 1), false);

            });

            // Update input files
            $input.prop('files', dataTransfer.files);

        };

        // Generate a random id
        let random = function () {
            return Date.now() + Math.floor((Math.random() * 100) + 1);
        };

        this.init();

        // Return the instance
        return this;
    };

}(jQuery));
